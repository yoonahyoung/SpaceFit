<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd"> 
<properties>
	
	<!-- 리뷰등록1_1 필요한 공간번호 조회 -->
	<entry key="selectSpaceNo">
		SELECT SPACE_NO
		  FROM TB_SPACE
		 WHERE SPACE_NAME = ?
	</entry>
	
	<!-- 리뷰등록1_2 TB_REVIEW INSERT -->
	<entry key="insertReview">
	   INSERT
		 INTO TB_REVIEW
		    (
		      RV_NO
		    , BOOK_NO
		    , SPACE_NO
		    , MEM_NO
		    , RV_CONTENT  
		    , RV_STAR
		    )
		 VALUES
		    (
		       SEQ_RVNO.NEXTVAL
		     , ?
		     , ?
		     , ?
		     , ?   
		     , ? 
		     )
	</entry>
	
	<!-- 리뷰등록1_3 TB_FILE INSERT -->
	<entry key="insertAttachmentList">
		INSERT
		  INTO TB_FILE
		    (
		       FILE_NO
		     , REF_BNO
		     , FILE_CATEGORY
		     , FILE_ORIGIN_NAME
		     , FILE_CHANGE_NAME
		     , FILE_UPLOAD_DATE
		     , FILE_PATH
		     , FILE_LEVEL
		    )
		 VALUES
		    (
		       SEQ_FINO.NEXTVAL
		     , SEQ_RVNO.CURRVAL
		     , 2
		     , ?
		     , ?
		     , SYSDATE
		     , ?
		     , ?
		    )
	</entry>

	<!-- 리뷰등록 1_4 해당 예약번호로 회원이 리뷰 했는지 조회 여부 -->
	<entry key="selectReviewValid">
		 SELECT NVL2(MAX(RV_NO), 'Y', 'N') AS "REVIEW_VALID"
	       FROM TB_REVIEW
	      WHERE BOOK_NO  = ? 
	        AND RV_STATUS = 'Y' 
	        AND MEM_NO = ? 
	</entry>
	
	<!-- 전체후기조회용 -->
	<entry key="selectReviewList">
		SELECT RV_NO
		     , SPACE_NAME
		     , BOOK_DATE     
		     , RV_CONTENT     
		     , RV_STAR 
		     , FILE_PATH || FILE_CHANGE_NAME AS "REVIEW_MAINIMG"
		  FROM TB_REVIEW R
		  JOIN TB_BOOK USING (BOOK_NO)
		  JOIN TB_SPACE S ON (R.SPACE_NO = S.SPACE_NO)
		  JOIN TB_FILE ON (REF_BNO = RV_NO)
		 WHERE R.MEM_NO = ?
		   AND RV_STATUS = 'Y'
		   AND FILE_CATEGORY = 2
		   AND FILE_LEVEL = 1
		   AND FILE_STATUS = 'Y'
		 ORDER 
		    BY RV_NO ASC
	</entry>

	<!-- detailReview - review -->
	<entry key="selectReview">
		SELECT RV_NO
	         , BOOK_NO
	         , SPACE_NO
	         , MEM_NO
	         , RV_CONTENT        
	         , RV_STAR       
	      FROM TB_REVIEW
	     WHERE RV_NO = ?
	</entry>
	
	<!-- detailReview - Attachment -->
	<entry key="selectAttachmentList">
		 SELECT FILE_NO
	          , FILE_ORIGIN_NAME
	          , FILE_CHANGE_NAME
	          , FILE_PATH	          
	          , FILE_LEVEL    
	      FROM TB_FILE
	     WHERE REF_BNO = ?
	       AND FILE_CATEGORY = 2
	       AND FILE_STATUS = 'Y'
	     ORDER 
	        BY FILE_LEVEL ASC
	</entry>
	
	<!-- 후기수정 1. 리뷰 -->
	<entry key="updateReview">
		UPDATE TB_REVIEW
		   SET RV_CONTENT = ?
		     , RV_STAR = ?
		     , RV_MODIFY_DATE = SYSDATE
		 WHERE RV_NO = ? 
	</entry>
	
	<!-- 기존파일 삭제 -->
	<entry key="deleteAttachment">
		UPDATE TB_FILE
		   SET FILE_STATUS = 'N'
		 WHERE REF_BNO = ?
	</entry>
	
	<!-- 후기수정3. 새로운파일업로드  -->
	<entry key="insertAttachmentList2">		
		INSERT
		  INTO TB_FILE
		    (
		       FILE_NO
		     , REF_BNO
		     , FILE_CATEGORY
		     , FILE_ORIGIN_NAME
		     , FILE_CHANGE_NAME
		     , FILE_UPLOAD_DATE
		     , FILE_PATH
		     , FILE_LEVEL
		    )
		 VALUES
		    (
		       SEQ_FINO.NEXTVAL
		     , ?
		     , 2
		     , ?
		     , ?
		     , SYSDATE
		     , ?
		     , ?
		    )	
	</entry>
	
	<entry key="deleteReivewReal">
		UPDATE TB_REVIEW
		   SET RV_STATUS = 'N'
		WHERE RV_NO = ? 
	</entry>

	




	<!-- 이 부분부터 공간별 후기리스트 관련 SQL 작성. 소희작성  --> 
	
	<entry key="selectRvListForSpace">
		SELECT RV_NO
		     , BOOK_NO
		     , SPACE_NAME
		     , MEM_ID
		     , RV_CONTENT
		     , RV_ENROLL_DATE
		     , RV_MODIFY_DATE
		     , RV_STAR
		     , RV_STATUS
		     , GR_NAME
		  FROM TB_REVIEW
		  JOIN TB_MEMBER USING (MEM_NO)
		  JOIN TB_GRADE USING (GR_NO)
		  JOIN TB_SPACE USING (SPACE_NO)
		 WHERE SPACE_NO = ?
	</entry>

</properties>