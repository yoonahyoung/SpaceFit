<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
	<entry key="selectQnAList">
			SELECT *
			  FROM (
			        SELECT ROWNUM RNUM, A.*
			          FROM (
			                SELECT 
			                       QNA_NO
			                     , QNA_CATEGORY
			                     , SPACE_CATEGORY
	                             , SPACE_NAME
			                     , QNA_TITLE
			                     , MEM_ID
			                     , QNA_COUNT
			                     , QNA_CREATE_DATE
			                  FROM TB_QNA B
			                  JOIN TB_MEMBER ON (QNA_MEM_NO = MEM_NO)
	                          JOIN TB_SPACE ON (QNA_SPACE_NO = SPACE_NO)
			                 WHERE B.QNA_STATUS = 'Y'
			                 ORDER 
			                    BY QNA_NO DESC
			               ) A
			        )
			 WHERE RNUM BETWEEN ? AND ?
	</entry>

	<entry key="selectListCount">
		SELECT COUNT(*) as "COUNT"
		  FROM TB_QNA
		 WHERE QNA_STATUS = 'Y'
	</entry>
	
	<entry key="selectCategoryList">
		SELECT
		       SPACE_NO
		     , SPACE_NAME
		  FROM TB_SPACE
		 WHERE SPACE_CATEGORY = ?
	</entry>
	
	<entry key="selectAllSpaceList">
		SELECT
		       SPACE_NO
		     , SPACE_NAME
		  FROM TB_SPACE
	</entry>
	
	<entry key="insertPublicQnA">
	INSERT
	  INTO TB_QNA 
	  (
	    QNA_NO
	  , QNA_CATEGORY
	  , QNA_SPACE_NO
	  , QNA_TITLE
	  , QNA_CONTENT
	  , QNA_MEM_NO
	  , QNA_SOLVED
	  )
	  VALUES
	  (
	    SEQ_QNNO.NEXTVAL
	  , ?
	  , ?
	  , ?
	  , ?
	  , ?
	  , 'N'
	  )
	</entry>
	
	<entry key="selectSpaceName">
	SELECT SPACE_NAME
	  FROM TB_SPACE
	 WHERE SPACE_NO = ?
	</entry>
	
	<entry key="insertSecretQnA">
	INSERT
	  INTO TB_QNA 
	  (
	    QNA_NO
	  , QNA_CATEGORY
	  , QNA_SPACE_NO
	  , QNA_TITLE
	  , QNA_CONTENT
	  , QNA_MEM_NO
	  , QNA_PUBLIC
	  , QNA_PWD
	  , QNA_SOLVED
	  )
	  VALUES
	  (
	    SEQ_QNNO.NEXTVAL
	  , ?
	  , ?
	  , ?
	  , ?
	  , ?
	  , 'N'
	  , ?
	  , 'N'
	  )
	</entry>
	<entry key="insertPublicReply">
	INSERT
		  INTO TB_QNA 
		  (
		    QNA_NO
		  , QNA_CATEGORY
		  , QNA_SPACE_NO
		  , QNA_TITLE
		  , QNA_CONTENT
		  , QNA_MEM_NO
		  , QNA_GROUP
		  , QNA_REF_NO
		  )
		  VALUES
		  (
		    ?
		  , ?
		  , ?
		  , ?
		  , ?
		  , ?
		  , 1
		  , ?
		  )
	</entry>
	
	<entry key="insertSecretReply">
	INSERT
		  INTO TB_QNA 
		  (
		    QNA_NO
		  , QNA_CATEGORY
		  , QNA_SPACE_NO
		  , QNA_TITLE
		  , QNA_CONTENT
		  , QNA_MEM_NO
		  , QNA_GROUP
		  , QNA_REF_NO
		  , QNA_PUBLIC
		  , QNA_PWD
		  )
		  VALUES
		  (
		    ?
		  , ?
		  , ?
		  , ?
		  , ?
		  , ?
		  , 1
		  , ?
		  , 'N'
		  , ?
		  )
	</entry>
	<entry key="insertAttachment">
	INSERT 
	  INTO TB_FILE
	  (
	    FILE_NO
	  , REF_BNO
	  , FILE_CATEGORY
	  , FILE_ORIGIN_NAME
	  , FILE_CHANGE_NAME
	  , FILE_PATH
	  )
	  VALUES
	  (
	    SEQ_FINO.NEXTVAL
	  , SEQ_QNNO.CURRVAL
	  , 4
	  , ?
	  , ?
	  , ?
	  )
	</entry>
	
	<entry key="insertRelpyAttachment">
	INSERT 
	  INTO TB_FILE
	  (
	    FILE_NO
	  , REF_BNO
	  , FILE_CATEGORY
	  , FILE_ORIGIN_NAME
	  , FILE_CHANGE_NAME
	  , FILE_PATH
	  )
	  VALUES
	  (
	    SEQ_FINO.NEXTVAL
	  , ?
	  , 4
	  , ?
	  , ?
	  , ?
	  )
	</entry>
	
	<entry key="selectAttachment">
		SELECT 
		       FILE_NO
		     , REF_BNO
		     , FILE_ORIGIN_NAME
		     , FILE_CHANGE_NAME
		     , FILE_PATH
		  FROM TB_FILE
		 WHERE FILE_CATEGORY = 4
		   AND REF_BNO = ?
		   AND FILE_STATUS = 'Y'
	</entry>
	
	<entry key="increaseCount">
		UPDATE TB_QNA
		   SET QNA_COUNT = QNA_COUNT+1
		 WHERE QNA_NO = ?
		   AND QNA_STATUS = 'Y'
	</entry>
	
	<entry key="changeSolvedStatus">
		UPDATE TB_QNA
		   SET QNA_SOLVED = 'Y'
		 WHERE QNA_NO = ?
	</entry>
	
	<entry key="selectQnA">
       SELECT
	       QNA_NO
	     , QNA_CATEGORY
	     , SPACE_CATEGORY
	     , SPACE_NO
	     , SPACE_NAME
	     , QNA_TITLE
	     , QNA_CONTENT
	     , MEM_ID
	     , QNA_COUNT
	     , QNA_CREATE_DATE
	     , QNA_PUBLIC
         , QNA_PWD
         , QNA_GROUP
	  FROM TB_QNA
	  JOIN TB_MEMBER ON(QNA_MEM_NO = MEM_NO)
	  JOIN TB_SPACE ON (QNA_SPACE_NO = SPACE_NO)
	 WHERE QNA_NO = ?
	   AND QNA_STATUS = 'Y'
	</entry>
	
	<entry key="isSolved">
	SELECT
		   COUNT(*) AS COUNT
	 FROM TB_QNA
    WHERE QNA_NO = ?
       OR QNA_REF_NO = ?
	</entry>
	
	<!-- 내 글 갯수조회 -->
	<entry key="selectMyListCount">
    SELECT COUNT(*) AS COUNT
      FROM TB_QNA
     WHERE QNA_MEM_NO = ?
        OR QNA_REF_NO = ANY(SELECT QNA_NO
		                      FROM TB_QNA
                             WHERE QNA_STATUS = 'Y'
                               AND QNA_MEM_NO = ?)
	</entry>
	<entry key="selectMyQnAList">
	SELECT *
	  FROM (
	        SELECT ROWNUM RNUM, A.*
	          FROM (
	                SELECT 
	                       QNA_NO
	                     , QNA_CATEGORY
	                     , SPACE_CATEGORY
                            , SPACE_NAME
	                     , QNA_TITLE
	                     , MEM_ID
	                     , QNA_COUNT
	                     , QNA_CREATE_DATE
	                  FROM TB_QNA B
	                  JOIN TB_MEMBER ON (QNA_MEM_NO = MEM_NO)
                         JOIN TB_SPACE ON (QNA_SPACE_NO = SPACE_NO)
	                 WHERE B.QNA_STATUS = 'Y'
                             AND QNA_MEM_NO = ?
                              OR QNA_REF_NO = ANY(SELECT QNA_NO
                                                    FROM TB_QNA
                                                   WHERE QNA_STATUS = 'Y'
                                                     AND QNA_MEM_NO = ?)
                          ORDER 
                             BY QNA_NO DESC
                              ) A
	        )
	 WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<entry key="deleteQnA">
	DELETE
	  FROM TB_QNA
	 WHERE QNA_NO = ?
	</entry>
	
	<!-- 검색 -->
    <!-- 전체 전체 전체 전체 -->
	<entry key="selectQnAListAll">
	SELECT 
	        QNA_NO
	      , QNA_CATEGORY
	      , SPACE_CATEGORY
	      , SPACE_NAME
	      , QNA_TITLE
	      , MEM_ID
	      , QNA_COUNT
	      , QNA_CREATE_DATE
	   FROM TB_QNA B
	   JOIN TB_MEMBER ON (QNA_MEM_NO = MEM_NO)
	   JOIN TB_SPACE ON (QNA_SPACE_NO = SPACE_NO)
	  WHERE B.QNA_STATUS = 'Y'
	  ORDER 
	     BY QNA_NO DESC
	</entry>
		<!-- 선택 선택 선택 대기 -->
		<entry key="selectQnAList16Wait">
		SELECT 
               QNA_NO
             , QNA_CATEGORY
             , SPACE_CATEGORY
             , SPACE_NAME
             , QNA_TITLE
             , MEM_ID
             , QNA_COUNT
             , QNA_CREATE_DATE
          FROM TB_QNA B
          JOIN TB_MEMBER ON (QNA_MEM_NO = MEM_NO)
          JOIN TB_SPACE ON (QNA_SPACE_NO = SPACE_NO)
         WHERE B.QNA_STATUS = 'Y'
           AND QNA_CATEGORY = ?
           AND SPACE_CATEGORY = ?
           AND SPACE_NO = ?
           AND QNA_REF_NO IS NULL
         ORDER 
            BY QNA_NO DESC
	</entry>
	
	<!-- 전체 전체 전체 대기 2-1-->
	<entry key="selectQnAList2Wait">
    SELECT 
           QNA_NO
         , QNA_CATEGORY
         , SPACE_CATEGORY
               , SPACE_NAME
         , QNA_TITLE
         , MEM_ID
         , QNA_COUNT
         , QNA_CREATE_DATE
      FROM TB_QNA B
      JOIN TB_MEMBER ON (QNA_MEM_NO = MEM_NO)
      JOIN TB_SPACE ON (QNA_SPACE_NO = SPACE_NO)
     WHERE B.QNA_STATUS = 'Y'
       AND QNA_SOLVED = 'N'
     ORDER 
        BY QNA_NO DESC
	</entry>
	
	<!-- 전체 전체 전체 완료 2-2 -->
	<entry key="selectQnAList2Solved">
    SELECT 
           QNA_NO
         , QNA_CATEGORY
         , SPACE_CATEGORY
         , SPACE_NAME
         , QNA_TITLE
         , MEM_ID
         , QNA_COUNT
         , QNA_CREATE_DATE
      FROM TB_QNA B
      JOIN TB_MEMBER ON (QNA_MEM_NO = MEM_NO)
      JOIN TB_SPACE ON (QNA_SPACE_NO = SPACE_NO)
     WHERE B.QNA_STATUS = 'Y'
       AND QNA_SOLVED = 'Y'
        OR QNA_REF_NO = ANY(SELECT 
                                   QNA_NO
                              FROM TB_QNA
                              JOIN TB_SPACE ON (QNA_SPACE_NO = SPACE_NO)
                             WHERE QNA_STATUS = 'Y'
                               AND QNA_SOLVED = 'Y')
     ORDER 
        BY QNA_NO DESC
	</entry>
	
	
	<!-- 전체 전체 선택 전체-->
	<entry key="selectQnAList3">
    SELECT 
           QNA_NO
         , QNA_CATEGORY
         , SPACE_CATEGORY
               , SPACE_NAME
         , QNA_TITLE
         , MEM_ID
         , QNA_COUNT
         , QNA_CREATE_DATE
      FROM TB_QNA B
      JOIN TB_MEMBER ON (QNA_MEM_NO = MEM_NO)
      JOIN TB_SPACE ON (QNA_SPACE_NO = SPACE_NO)
     WHERE B.QNA_STATUS = 'Y'
       AND SPACE_NO = ?
     ORDER 
        BY QNA_NO DESC
	</entry>
	
	<!-- 전체 전체 선택 대기 4-1-->
	<entry key="selectQnAList4Wait">
    SELECT 
           QNA_NO
         , QNA_CATEGORY
         , SPACE_CATEGORY
         , SPACE_NAME
         , QNA_TITLE
         , MEM_ID
         , QNA_COUNT
         , QNA_CREATE_DATE
      FROM TB_QNA B
      JOIN TB_MEMBER ON (QNA_MEM_NO = MEM_NO)
      JOIN TB_SPACE ON (QNA_SPACE_NO = SPACE_NO)
     WHERE B.QNA_STATUS = 'Y'
       AND SPACE_NO = ?
       AND QNA_SOLVED = 'N'
     ORDER 
        BY QNA_NO DESC
	</entry>
	<!-- 전체 전체 선택 완료 4-2 -->
	<entry key="selectQnAList4Solved">
    SELECT 
           QNA_NO
         , QNA_CATEGORY
         , SPACE_CATEGORY
         , SPACE_NAME
         , QNA_TITLE
         , MEM_ID
         , QNA_COUNT
         , QNA_CREATE_DATE
      FROM TB_QNA B
      JOIN TB_MEMBER ON (QNA_MEM_NO = MEM_NO)
      JOIN TB_SPACE ON (QNA_SPACE_NO = SPACE_NO)
     WHERE B.QNA_STATUS = 'Y'
       AND SPACE_NO = ?
       AND QNA_SOLVED = 'Y'
        OR QNA_REF_NO = ANY(SELECT 
                                   QNA_NO
                              FROM TB_QNA
                              JOIN TB_SPACE ON (QNA_SPACE_NO = SPACE_NO)
                             WHERE QNA_STATUS = 'Y'
                               AND SPACE_NO = ?
                               AND QNA_SOLVED = 'Y')
     ORDER 
        BY QNA_NO DESC
	</entry>
	<!-- 전체 선택 전체 전체-->
	<entry key="selectQnAList5">
    SELECT 
           QNA_NO
         , QNA_CATEGORY
         , SPACE_CATEGORY
         , SPACE_NAME
         , QNA_TITLE
         , MEM_ID
         , QNA_COUNT
         , QNA_CREATE_DATE
      FROM TB_QNA B
      JOIN TB_MEMBER ON (QNA_MEM_NO = MEM_NO)
      JOIN TB_SPACE ON (QNA_SPACE_NO = SPACE_NO)
     WHERE B.QNA_STATUS = 'Y'
       AND SPACE_CATEGORY = ?
     ORDER 
        BY QNA_NO DESC
	</entry>
	<!-- 전체 선택 전체 대기 6-1 -->
	<entry key="selectQnAList6Wait">
	SELECT 
           QNA_NO
         , QNA_CATEGORY
         , SPACE_CATEGORY
         , SPACE_NAME
         , QNA_TITLE
         , MEM_ID
         , QNA_COUNT
         , QNA_CREATE_DATE
      FROM TB_QNA B
      JOIN TB_MEMBER ON (QNA_MEM_NO = MEM_NO)
      JOIN TB_SPACE ON (QNA_SPACE_NO = SPACE_NO)
     WHERE B.QNA_STATUS = 'Y'
       AND SPACE_CATEGORY = ?
       AND QNA_SOLVED = 'N'
     ORDER 
        BY QNA_NO DESC
	</entry>
	<!-- 전체 선택 전체 완료 6-2 -->
	<entry key="selectQnAList6Solved">
    SELECT 
           QNA_NO
         , QNA_CATEGORY
         , SPACE_CATEGORY
         , SPACE_NAME
         , QNA_TITLE
         , MEM_ID
         , QNA_COUNT
         , QNA_CREATE_DATE
      FROM TB_QNA B
      JOIN TB_MEMBER ON (QNA_MEM_NO = MEM_NO)
      JOIN TB_SPACE ON (QNA_SPACE_NO = SPACE_NO)
     WHERE B.QNA_STATUS = 'Y'
       AND SPACE_CATEGORY = ?
       AND QNA_SOLVED = 'Y'
        OR QNA_REF_NO = ANY(SELECT 
                                   QNA_NO
                              FROM TB_QNA
                              JOIN TB_SPACE ON (QNA_SPACE_NO = SPACE_NO)
                             WHERE QNA_STATUS = 'Y'
                               AND SPACE_CATEGORY = ?
                               AND QNA_SOLVED = 'Y')
     ORDER 
        BY QNA_NO DESC
	</entry>
	
	<!-- 전체 선택 선택 전체 7-->
	<entry key="selectQnAList7">
    SELECT 
           QNA_NO
         , QNA_CATEGORY
         , SPACE_CATEGORY
         , SPACE_NAME
         , QNA_TITLE
         , MEM_ID
         , QNA_COUNT
         , QNA_CREATE_DATE
      FROM TB_QNA B
      JOIN TB_MEMBER ON (QNA_MEM_NO = MEM_NO)
      JOIN TB_SPACE ON (QNA_SPACE_NO = SPACE_NO)
     WHERE B.QNA_STATUS = 'Y'
       AND SPACE_CATEGORY = ?
       AND SPACE_NO = ?
     ORDER 
        BY QNA_NO DESC
	</entry>
	<!-- 선택 전체 전체 전체 9-->
	<entry key="selectQnAList9">
	SELECT 
	        QNA_NO
	      , QNA_CATEGORY
	      , SPACE_CATEGORY
	      , SPACE_NAME
	      , QNA_TITLE
	      , MEM_ID
	      , QNA_COUNT
	      , QNA_CREATE_DATE
	   FROM TB_QNA B
	   JOIN TB_MEMBER ON (QNA_MEM_NO = MEM_NO)
	   JOIN TB_SPACE ON (QNA_SPACE_NO = SPACE_NO)
	  WHERE B.QNA_STATUS = 'Y'
	    AND QNA_CATEGORY = ?
	  ORDER 
	     BY QNA_NO DESC
	</entry>
	<!-- 선택 전체 전체 대기 10-1 -->
	<entry key="selectQnAList10Wait">
	SELECT 
           QNA_NO
         , QNA_CATEGORY
         , SPACE_CATEGORY
         , SPACE_NAME
         , QNA_TITLE
         , MEM_ID
         , QNA_COUNT
         , QNA_CREATE_DATE
      FROM TB_QNA B
      JOIN TB_MEMBER ON (QNA_MEM_NO = MEM_NO)
      JOIN TB_SPACE ON (QNA_SPACE_NO = SPACE_NO)
     WHERE B.QNA_STATUS = 'Y'
       AND QNA_CATEGORY = ?
       AND QNA_SOLVED = 'N'
     ORDER 
        BY QNA_NO DESC
	</entry>
	<!-- 선택 전체 전체 완료 10-2 -->
	<entry key="selectQnAList10Solved">
    SELECT 
           QNA_NO
         , QNA_CATEGORY
         , SPACE_CATEGORY
         , SPACE_NAME
         , QNA_TITLE
         , MEM_ID
         , QNA_COUNT
         , QNA_CREATE_DATE
      FROM TB_QNA B
      JOIN TB_MEMBER ON (QNA_MEM_NO = MEM_NO)
      JOIN TB_SPACE ON (QNA_SPACE_NO = SPACE_NO)
     WHERE B.QNA_STATUS = 'Y'
       AND QNA_CATEGORY = ?
       AND QNA_SOLVED = 'Y'
        OR QNA_REF_NO = ANY(SELECT 
                                   QNA_NO
                              FROM TB_QNA
                              JOIN TB_SPACE ON (QNA_SPACE_NO = SPACE_NO)
                             WHERE QNA_STATUS = 'Y'
                               AND QNA_CATEGORY = ?
                               AND QNA_SOLVED = 'Y')
     ORDER 
        BY QNA_NO DESC
	</entry>
	<!-- 선택 전체 선택 전체 11-->
	<entry key="selectQnAList11">
    SELECT 
           QNA_NO
         , QNA_CATEGORY
         , SPACE_CATEGORY
         , SPACE_NAME
         , QNA_TITLE
         , MEM_ID
         , QNA_COUNT
         , QNA_CREATE_DATE
      FROM TB_QNA B
      JOIN TB_MEMBER ON (QNA_MEM_NO = MEM_NO)
      JOIN TB_SPACE ON (QNA_SPACE_NO = SPACE_NO)
     WHERE B.QNA_STATUS = 'Y'
       AND QNA_CATEGORY = ?
       AND SPACE_NO = ?
     ORDER 
        BY QNA_NO DESC
	</entry>
	<!-- 선택 전체 선택 대기 12-1 -->
	<entry key="selectQnAList12Wait">
    SELECT 
           QNA_NO
         , QNA_CATEGORY
         , SPACE_CATEGORY
         , SPACE_NAME
         , QNA_TITLE
         , MEM_ID
         , QNA_COUNT
         , QNA_CREATE_DATE
      FROM TB_QNA B
      JOIN TB_MEMBER ON (QNA_MEM_NO = MEM_NO)
      JOIN TB_SPACE ON (QNA_SPACE_NO = SPACE_NO)
     WHERE B.QNA_STATUS = 'Y'
       AND QNA_CATEGORY = ?
       AND SPACE_NO = ?
       AND QNA_SOLVED = 'N'
     ORDER 
        BY QNA_NO DESC
	</entry>
	<!-- 선택 전체 선택 완료 12-2 -->
	<entry key="selectQnAList12Solved">
    SELECT 
           QNA_NO
         , QNA_CATEGORY
         , SPACE_CATEGORY
         , SPACE_NAME
         , QNA_TITLE
         , MEM_ID
         , QNA_COUNT
         , QNA_CREATE_DATE
      FROM TB_QNA B
      JOIN TB_MEMBER ON (QNA_MEM_NO = MEM_NO)
      JOIN TB_SPACE ON (QNA_SPACE_NO = SPACE_NO)
     WHERE B.QNA_STATUS = 'Y'
       AND QNA_CATEGORY = ?
       AND SPACE_NO = ?
       AND QNA_SOLVED = 'Y'
        OR QNA_REF_NO = ANY(SELECT 
                                   QNA_NO
                              FROM TB_QNA
                              JOIN TB_SPACE ON (QNA_SPACE_NO = SPACE_NO)
                             WHERE QNA_STATUS = 'Y'
                               AND QNA_CATEGORY = ?
                               AND SPACE_NO = ?
                               AND QNA_SOLVED = 'Y')
     ORDER 
        BY QNA_NO DESC
	</entry>
	<!-- 선택 선택 전체 전체-->
	<entry key="selectQnAList13">
    SELECT 
           QNA_NO
         , QNA_CATEGORY
         , SPACE_CATEGORY
         , SPACE_NAME
         , QNA_TITLE
         , MEM_ID
         , QNA_COUNT
         , QNA_CREATE_DATE
      FROM TB_QNA B
      JOIN TB_MEMBER ON (QNA_MEM_NO = MEM_NO)
      JOIN TB_SPACE ON (QNA_SPACE_NO = SPACE_NO)
     WHERE B.QNA_STATUS = 'Y'
       AND QNA_CATEGORY = ?
       AND SPACE_CATEGORY = ?
     ORDER 
        BY QNA_NO DESC
	</entry>
		<!-- 선택 선택 전체 대기 14-1 -->
	<entry key="selectQnAList14Wait">
	SELECT 
           QNA_NO
         , QNA_CATEGORY
         , SPACE_CATEGORY
         , SPACE_NAME
         , QNA_TITLE
         , MEM_ID
         , QNA_COUNT
         , QNA_CREATE_DATE
      FROM TB_QNA B
      JOIN TB_MEMBER ON (QNA_MEM_NO = MEM_NO)
      JOIN TB_SPACE ON (QNA_SPACE_NO = SPACE_NO)
     WHERE B.QNA_STATUS = 'Y'
       AND QNA_CATEGORY = ?
       AND SPACE_CATEGORY = ?
       AND QNA_SOLVED = 'N'
     ORDER 
        BY QNA_NO DESC
	</entry>
	<!-- 선택 선택 전체 완료 14-2 -->
	<entry key="selectQnAList14Solved">
    SELECT 
           QNA_NO
         , QNA_CATEGORY
         , SPACE_CATEGORY
         , SPACE_NAME
         , QNA_TITLE
         , MEM_ID
         , QNA_COUNT
         , QNA_CREATE_DATE
      FROM TB_QNA B
      JOIN TB_MEMBER ON (QNA_MEM_NO = MEM_NO)
      JOIN TB_SPACE ON (QNA_SPACE_NO = SPACE_NO)
     WHERE B.QNA_STATUS = 'Y'
       AND QNA_CATEGORY = ?
       AND SPACE_CATEGORY = ?
       AND QNA_SOLVED = 'Y'
        OR QNA_REF_NO = ANY(SELECT 
	                               QNA_NO
	                          FROM TB_QNA
	                          JOIN TB_SPACE ON (QNA_SPACE_NO = SPACE_NO)
	                         WHERE QNA_STATUS = 'Y'
	                           AND QNA_CATEGORY = ?
	                           AND SPACE_CATEGORY = ?
	                           AND QNA_SOLVED = 'Y')
     ORDER 
        BY QNA_NO DESC
	</entry>
</properties>